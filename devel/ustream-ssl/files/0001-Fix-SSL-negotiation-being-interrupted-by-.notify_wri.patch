From d4dd32e7b7d58c073cd756eeda9ee5d0ca28ff42 Mon Sep 17 00:00:00 2001
From: Yousong Zhou <yszhou4tech@gmail.com>
Date: Wed, 11 Feb 2015 16:25:57 +0800
Subject: [PATCH] Fix SSL negotiation being interrupted by .notify_write from
 BIO method.

ustream_ssl_check_conn() may be called by .notify_write while a previous
SSL_connect() is still in process.  This can happen because the
.notify_write callback will may be triggered by writes in the BIO
methods.

Signed-off-by: Yousong Zhou <yszhou4tech@gmail.com>
---
 ustream-ssl.c |   15 +++++++++++++--
 ustream-ssl.h |    1 +
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/ustream-ssl.c b/ustream-ssl.c
index dd0faf9..d8d1188 100644
--- a/ustream-ssl.c
+++ b/ustream-ssl.c
@@ -34,12 +34,22 @@ static void ustream_ssl_error_cb(struct uloop_timeout *t)
 		us->notify_error(us, error, __ustream_ssl_strerror(us->error, buffer, sizeof(buffer)));
 }
 
+static enum ssl_conn_status ustream_ssl_do_connect(struct ustream_ssl *us)
+{
+	enum ssl_conn_status status;
+
+	us->connecting = true;
+	status = __ustream_ssl_connect(us);
+	us->connecting = false;
+	return status;
+}
+
 static void ustream_ssl_check_conn(struct ustream_ssl *us)
 {
-	if (us->connected || us->error)
+	if (us->connected || us->error || us->connecting)
 		return;
 
-	if (__ustream_ssl_connect(us) == U_SSL_OK) {
+	if (ustream_ssl_do_connect(us) == U_SSL_OK) {
 		us->connected = true;
 		if (us->notify_connected)
 			us->notify_connected(us);
@@ -141,6 +151,7 @@ static void ustream_ssl_free(struct ustream *s)
 	us->ssl = NULL;
 	us->conn = NULL;
 	us->peer_cn = NULL;
+	us->connecting = false;
 	us->connected = false;
 	us->error = false;
 	us->valid_cert = false;
diff --git a/ustream-ssl.h b/ustream-ssl.h
index 0c55344..1d2a8f9 100644
--- a/ustream-ssl.h
+++ b/ustream-ssl.h
@@ -37,6 +37,7 @@ struct ustream_ssl {
 	char *server_name;
 
 	int error;
+	bool connecting;
 	bool connected;
 	bool server;
 
-- 
1.7.10.4

